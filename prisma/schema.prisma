generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(PATIENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  doctor  Doctor?
  patient Patient?

  @@map("users")
}

model Doctor {
  id           String        @id @default(cuid())
  userId       String        @unique
  speciality   String
  isOnline     Boolean       @default(false)
  lastOnlineAt DateTime?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  appointments Appointment[]

  @@map("doctors")
}

model Patient {
  id        String   @id @default(cuid())
  userId    String   @unique
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  appointments Appointment[]

  @@map("patients")
}

model Notification {
  id        String   @id @default(cuid())
  type      String
  message   String
  sentTo    String[] // Array of email addresses
  sentAt    DateTime @default(now())

  @@map("notifications")
}

model Appointment {
  id              String            @id @default(cuid())
  patientId       String
  doctorId        String
  appointmentDate DateTime
  status          AppointmentStatus @default(PENDING)
  notes           String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  // Relations
  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor  Doctor  @relation(fields: [doctorId], references: [id], onDelete: Cascade)

  @@map("appointments")
}

enum Role {
  DOCTOR
  PATIENT
  ADMIN
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
  NO_SHOW
}
